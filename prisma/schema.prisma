datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Series {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(100)
  createdAt DateTime  @default(now()) @map("created_at")
  products  Product[]

  @@map("series")
}

model Scent {
  id            Int            @id @default(autoincrement())
  name          String         @db.VarChar(100)
  createdAt     DateTime       @default(now()) @map("created_at")
  scentProducts ScentProduct[]

  @@map("scents")
}

model ScentProduct {
  id         Int      @id @default(autoincrement())
  scent_id   Int
  product_id Int
  createdAt  DateTime @default(now()) @map("created_at")
  scent      Scent    @relation(fields: [scent_id], references: [id])
  products   Product  @relation(fields: [product_id], references: [id])

  @@map("scent_products")
}

model Volume {
  id             Int             @id @default(autoincrement())
  volume_ml      Decimal         @db.Decimal(2, 1)
  crated_at      DateTime        @default(now())
  productsVolume ProductVolume[]

  @@map("volume")
}

model ProductVolume {
  id         Int      @id @default(autoincrement())
  product_id Int
  volume_id  Int
  createdAt  DateTime @default(now()) @map("created_at")
  products   Product  @relation(fields: [product_id], references: [id])
  volume     Volume   @relation(fields: [volume_id], references: [id])

  @@map("products_volume")
}

model Product {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(45)
  price            Decimal           @db.Decimal(18, 3)
  description      String            @db.VarChar(500)
  series_id        Int
  createdAt        DateTime          @default(now()) @map("created_at")
  series           Series            @relation(fields: [series_id], references: [id])
  scentProducts    ScentProduct[]
  productsVolume   ProductVolume[]
  productNotes     ProductNote[]
  images           Image[]
  seasonalProducts SeasonalProduct[]
  productsKeywords ProductKeyword[]
  reviews          Review[]

  @@map("products")
}

model Image {
  id         Int      @id @default(autoincrement())
  image_url  String   @db.VarChar(2000)
  product_id Int
  createdAt  DateTime @default(now()) @map("created_at")
  products   Product  @relation(fields: [product_id], references: [id])

  @@map("images")
}

model Season {
  id               Int               @id @default(autoincrement())
  name             String            @db.VarChar(45)
  createdAt        DateTime          @default(now())
  seasonalProducts SeasonalProduct[]

  @@map("seasons")
}

model SeasonalProduct {
  id         Int      @id @default(autoincrement())
  rank       Int
  product_id Int
  season_id  Int
  createdAt  DateTime @default(now()) @map("created_at")
  seasons    Season   @relation(fields: [season_id], references: [id])
  products   Product  @relation(fields: [product_id], references: [id])

  @@map("seasonal_products")
}

model Note {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(45)
  createdAt    DateTime      @default(now())
  productNotes ProductNote[]

  @@map("notes")
}

model NoteType {
  id           Int           @id @default(autoincrement())
  name         String        @db.VarChar(45)
  createdAt    DateTime      @default(now()) @map("created_at")
  productNotes ProductNote[]

  @@map("note_type")
}

model ProductNote {
  id           Int      @id @default(autoincrement())
  product_id   Int
  note_id      Int
  createdAt    DateTime @default(now()) @map("created_at")
  note_type_id Int
  products     Product  @relation(fields: [product_id], references: [id])
  notes        Note     @relation(fields: [note_id], references: [id])
  noteType     NoteType @relation(fields: [note_type_id], references: [id])

  @@map("product_notes")
}

model Keyword {
  id               Int              @id @default(autoincrement())
  name             String           @db.VarChar(45)
  createdAt        DateTime         @default(now()) @map("created_at")
  productsKeywords ProductKeyword[]

  @@map("keywords")
}

model ProductKeyword {
  id         Int      @id @default(autoincrement())
  product_id Int
  keyword_id Int
  createdAt  DateTime @default(now()) @map("created_at")
  products   Product  @relation(fields: [product_id], references: [id])
  keywords   Keyword  @relation(fields: [keyword_id], references: [id])

  @@map("products_keywords")
}

model User {
  id           Int      @id @default(autoincrement())
  name         String   @db.VarChar(45)
  email        String   @db.VarChar(200)
  user_account String   @db.VarChar(45)
  phone_number String   @db.VarChar(45)
  password     String   @db.VarChar(100)
  createdAt    DateTime @default(now()) @map("created_at")
  reviews      Review[]

  @@map("users")
}

model Review {
  id           Int           @id @default(autoincrement())
  title        String        @db.VarChar(200)
  content      String        @db.VarChar(2000)
  date         DateTime      @db.Date
  user_id      Int
  product_id   Int
  rate_star    Int
  createdAt    DateTime      @default(now()) @map("created_at")
  users        User          @relation(fields: [user_id], references: [id])
  products     Product       @relation(fields: [product_id], references: [id])
  reviewImages ReviewImage[]

  @@map("reviews")
}

model ReviewImage {
  id        Int      @id @default(autoincrement())
  image_url String   @db.VarChar(2000)
  review_id Int
  createdAt DateTime @default(now()) @map("created_at")
  reviews   Review   @relation(fields: [review_id], references: [id])

  @@map("review_images")
}
